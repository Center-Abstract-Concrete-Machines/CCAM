---
import Base from '@layouts/Base.astro';
import HorizontalSpacer from '@components/HorizontalSpacer.astro';
import TagsList from '@components/TagsList.astro';
import { Image, Picture } from 'astro:assets';
import { getCollection } from 'astro:content';
import { sortDescByEndDate } from '@utils/programFilters';
import ProgramCard from '@components/Programs/ProgramCard.astro';
import PeopleDisplay from '@components/PeopleDisplay.astro';
import ResourcesDisplay from '@components/Resources/ResourcesDisplay.astro';

const { title, subtitle, image, tags, projectId, people } =
    Astro.props.frontmatter;
const { slug } = Astro.props;

const associatedPrograms = (
    await getCollection('programs', ({ data }) => {
        return data.tags.includes(projectId) || data.assProjectId === projectId;
    })
).sort(sortDescByEndDate);

const associatedResources = await getCollection('resources', ({ data }) =>
    data.tags.includes(projectId)
);
---

<Base title={title}>
    <div class="p-4">
        <div class="mx-auto max-w-2xl">
            <h1
                class="text-4xl uppercase font-semibold leading-tight tracking-tight text-center py-24"
            >
                {title}
                {
                    subtitle && (
                        <span>
                            : <br />
                            {subtitle}
                        </span>
                    )
                }
            </h1>
        </div>
        <HorizontalSpacer />
        <div class="mx-auto py-4 max-w-2xl">
            <div transition:name=`image-${slug}`>
                <Picture
                    src={image.url}
                    alt={image.alt}
                    class="mx-auto"
                    widths={[400, 600, 1200, 1600]}
                    width="1600"
                />
            </div>
        </div>


        {
            associatedPrograms.length > 0 && (
                <>
                  
                    <HorizontalSpacer class="my-4" />
                    <div
                        class={
                            associatedPrograms.length === 1
                                ? 'max-w-lg mx-auto'
                                : 'card-grid double p-4'
                        }
                    >
                        {associatedPrograms.map((program) => (
                            <ProgramCard
                                headingSize="text-xl"
                                slug={program.slug}
                                frontmatter={program.data}
                            />
                        ))}
                    </div>
                </>
            )
        }

<HorizontalSpacer class="my-4" />

        <div
            class="prose dark:prose-invert prose-headings:font-semibold mx-auto my-4 mb-12"
        >
            <slot />
            <TagsList tags={tags} class="my-12 mb-16" />
        </div>
        {people && <PeopleDisplay people={people} />}

 
        {
            associatedResources.length > 0 && (
                <div>
                    <HorizontalSpacer class="my-4" />
                    <h2 class="text-2xl sm:text-3xl font-semibold text-center my-12">
                        Resources
                    </h2>
                    <HorizontalSpacer />
                    <ResourcesDisplay tag={projectId} />
                </div>
            )
        }
    </div>
</Base>
