---
import Base from '../layouts/Base.astro';
import TitleCard from '../components/TitleCard.astro';
import ProgramCard from '../components/Programs/ProgramCard.astro';
import { getCollection } from 'astro:content';
import Tag from '../components/Programs/Tag.astro';
import GridSpacer from '../components/GridSpacer.astro';
// import HorizontalSpacer from '../components/HorizontalSpacer.jsx';
import HorizontalSpacer from '../components/HorizontalSpacer.astro';
import ProgramFilter from '../components/Programs/ProgramFilter.jsx';

const heading = {
    title: 'Programs',
    description:
        'Our school supports interdisciplinary study in art, code, hardware and critical theory through events, classes, and workshops.',
};

function isEventUpcoming(eventData) {
    if (eventData.endDate instanceof Date) {
        return Date.now() < eventData.endDate.getTime();
    } else return true; // Such as if endDate is string 'ongoing'
}

function sortByPubDate(array) {
    return array.sort(
        (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
    );
}

const upcomingPrograms = sortByPubDate(
    await getCollection('programs', ({ data }) => isEventUpcoming(data))
);

const pastPrograms = sortByPubDate(
    await getCollection('programs', ({ data }) => !isEventUpcoming(data))
);

const allPrograms = sortByPubDate(await getCollection('programs'));
---

<Base title="Programs">
    <div class="mx-auto w-full p-4">
        <TitleCard title={heading.title} text={heading.description} />
        <ProgramFilter programs={allPrograms} client:load />
    </div>
</Base>

<style is:global>
    .two-columns,
    .three-columns {
        grid-template-columns: 1fr;
    }

    .spacer:last-child,
    .spacer:last-child {
        display: none;
    }

    @media (min-width: 640px) {
        .two-columns {
            grid-template-columns:
                minmax(0, 1fr) 1px
                minmax(0, 1fr) 1px;
        }
        .three-columns {
            grid-template-columns:
                minmax(0, 1fr) 1px
                minmax(0, 1fr) 1px
                minmax(0, 1fr) 1px;
        }
        .program-card:nth-child(n + 6) {
            /* @apply outline-t outline-dashed outline-borderColor; */
        }
    }
</style>
