---
import Base from '../layouts/Base.astro';
import TitleCard from '../components/TitleCard.astro';
import ProgramCard from '../components/Programs/ProgramCard.astro';
import { getCollection } from 'astro:content';
import Tag from '../components/Programs/Tag.astro';
import GridSpacer from '../components/GridSpacer.astro';
import HorizontalSpacer from '../components/HorizontalSpacer.astro';

const heading = {
    title: 'Programs',
    description:
        'Our school supports interdisciplinary study in art, code, hardware and critical theory through events, classes, and workshops.',
};

function isEventUpcoming(eventData) {
    if (eventData.endDate instanceof Date) {
        return Date.now() < eventData.endDate.getTime();
    } else return true; // Such as if endDate is string 'ongoing'
}

function sortByPubDate(array) {
    return array.sort(
        (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
    );
}

const upcomingPrograms = sortByPubDate(
    await getCollection('programs', ({ data }) => isEventUpcoming(data))
);

const pastPrograms = sortByPubDate(
    await getCollection('programs', ({ data }) => !isEventUpcoming(data))
);
---

<Base title="Programs">
    <div class="mx-auto w-full p-4">
        <TitleCard title={heading.title} text={heading.description} />

        <div class="min-w-0">
            <div
                class="flex flex-wrap justify-between items-center text-sm py-4 gap-x-4 gap-y-2"
            >
                <span>Filter</span>
                <div class="flex gap-4 flex-wrap">
                    <Tag tag="Event" />
                    <Tag tag="Workshop" />
                    <Tag tag="Study" />
                </div>
            </div>
            <HorizontalSpacer />
            <div class="grid two-columns gap-4 pb-4">
                {
                    upcomingPrograms.map((program) => (
                        <>
                            <ProgramCard
                                slug={program.slug}
                                frontmatter={program.data}
                            />
                            <GridSpacer />
                        </>
                    ))
                }
            </div>
        </div>

        <div>
            <HorizontalSpacer />
            <h2
                class="text-center py-16 font-medium leading-tight tracking-tight text-3xl"
            >
                Past Programs
            </h2>
            <HorizontalSpacer class="pb-4" />
            <div class="grid gap-4 three-columns">
                {
                    pastPrograms.map((program) => (
                        <>
                            <div class="program-card">
                                <ProgramCard
                                    slug={program.slug}
                                    frontmatter={program.data}
                                    headingSize="text-xl"
                                />
                            </div>
                            <GridSpacer />
                        </>
                    ))
                }
            </div>
        </div>
    </div>
</Base>

<style>
    .two-columns,
    .three-columns {
        grid-template-columns: 1fr;
    }

    .spacer:last-child,
    .spacer:last-child {
        display: none;
    }

    @media (min-width: 640px) {
        .two-columns {
            grid-template-columns:
                minmax(0, 1fr) 1px
                minmax(0, 1fr) 1px;
        }
        .three-columns {
            grid-template-columns:
                minmax(0, 1fr) 1px
                minmax(0, 1fr) 1px
                minmax(0, 1fr) 1px;
        }
        .program-card:nth-child(n + 6) {
            /* @apply outline-t outline-dashed outline-borderColor; */
        }
    }
</style>
