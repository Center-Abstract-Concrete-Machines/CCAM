---
import Base from '@layouts/Base.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
    const allPrograms = await getCollection('programs');
    const allResources = await getCollection('resources');
    const allProjects = await getCollection('projects');

    const uniqueTags = [
        ...new Set(allPrograms.map((program) => program.data.tags).flat()),
        ...new Set(allResources.map((resource) => resource.data.tags).flat()),
        ...new Set(allProjects.map((project) => project.data.tags).flat()),
    ];

    return uniqueTags.map((tag) => {
        const filteredPrograms = allPrograms.filter((program) =>
            program.data.tags.includes(tag)
        );
        const filteredResources = allResources.filter((resource) =>
            resource.data.tags.includes(tag)
        );
        const filteredProjects = allProjects.filter((project) =>
            project.data.tags.includes(tag)
        );

        return {
            params: { tag },
            props: {
                programs: filteredPrograms,
                resources: filteredResources,
                projects: filteredProjects,
            },
        };
    });
}

const { tag } = Astro.params;
const { programs, resources, projects } = Astro.props;
---

<Base title={tag}>
    <div class="prose dark:prose-invert mx-auto">
        {
            programs.length > 0 && (
                <section>
                    <h2>Programs tagged with "{tag}"</h2>
                    <ul>
                        {programs.map((program) => (
                            <div>
                                <a href={`/programs/${program.slug}`}>
                                    {program.data.title}
                                </a>
                            </div>
                        ))}
                    </ul>
                </section>
            )
        }
        {
            resources.length > 0 && (
                <section>
                    <h2>Resources tagged with "{tag}"</h2>
                    <ul>
                        {resources.map((resource) => (
                            <div>
                                <a href={`/resources/${resource.slug}`}>
                                    {resource.data.title}
                                </a>
                            </div>
                        ))}
                    </ul>
                </section>
            )
        }
        {
            projects.length > 0 && (
                <section>
                    <h2>Projects tagged with "{tag}"</h2>
                    <ul>
                        {projects.map((project) => (
                            <div>
                                <a href={`/projects/${project.slug}`}>
                                    {project.data.title}
                                </a>
                            </div>
                        ))}
                    </ul>
                </section>
            )
        }
    </div>
</Base>
